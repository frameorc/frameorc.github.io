function Y(j,w){let{pages:T={},basePath:E=new URL("./",document.location).href,notFound:I=({name:J,arg:K})=>[J," not found"],loading:k=({name:J,arg:K})=>["Loading..."],loadingScreenTimeout:q=150,errorView:z=({name:J,arg:K,e:L,retry:N=H})=>["Error: ",L],resolver:C=E==null?null:async(J)=>{return await import(E+J+".js")}}=w,D={target:j};async function G({name:J,arg:K}){let L=T[J];if(L!==void 0)return L;if(C==null)return I;let N=setTimeout(()=>D.target?.(k({name:J,arg:K})),q);try{return T[J]=(await C(J)).default}finally{clearTimeout(N)}}async function H({name:J,arg:K}){D.target=null,D={target:j};try{let L=await G({name:J,arg:K});D.target?.(typeof L==="function"?L({name:J,arg:K}):L)}catch(L){console.error(L),D.target?.(z({name:J,arg:K,e:L}))}}return H}var Z=function(){let j=location.hash.slice(1),w=j.indexOf("#");if(w===-1)w=j.length;return{name:j.slice(0,w),arg:j.slice(w+1)}};function _(j,w){let T=()=>j(Z());addEventListener("hashchange",T),w?.addEventListener("abort",()=>removeEventListener("hashchange",T)),T()}var Q=(j)=>j?Object.fromEntries(j.split(";").map((w)=>w.split("=").map((T)=>decodeURIComponent(T)))):{},R=(j)=>Object.entries(j).map((w)=>w.map((T)=>encodeURIComponent(T)).join("=")).join(";"),S=(j)=>j?JSON.parse(atob(j)):{},U=(j)=>btoa(JSON.stringify(j)),W=(j)=>({arg:w,...T})=>j(Q(w),T),X=(j)=>({arg:w,...T})=>j(S(w),T);export{Y as router,Q as p2o,R as o2p,_ as installOnHash,W as hrRoute,U as encodeArg,S as decodeArg,X as bRoute};
