function Z(b,l){let{pages:j={},basePath:I=new URL("./",document.location).href,notFound:J=({name:K,arg:L})=>[K," not found"],loading:k=({name:K,arg:L})=>["Loading..."],loadingScreenTimeout:q=150,errorView:z=({name:K,arg:L,e:N,retry:Q=G})=>["Error: ",N],resolver:C=I==null?null:async(K)=>{return await import(I+K+".js")}}=l,D={target:b};async function E({name:K,arg:L}){let N=j[K];if(N!==void 0)return N;if(C==null)return J;let Q=setTimeout(()=>D.target?.(k({name:K,arg:L})),q);try{return j[K]=(await C(K)).default}finally{clearTimeout(Q)}}async function G({name:K,arg:L}){D.target=null,D={target:b};try{let N=await E({name:K,arg:L});D.target?.(typeof N==="function"?N({name:K,arg:L}):N)}catch(N){console.error(N),D.target?.(z({name:K,arg:L,e:N}))}}return G}var _=function(){let b=location.hash.slice(1),l=b.indexOf("#");if(l===-1)l=b.length;return{name:b.slice(0,l),arg:b.slice(l+1)}};function $(b,l){let j=()=>b(_());addEventListener("hashchange",j),l?.addEventListener("abort",()=>removeEventListener("hashchange",j)),j()}var R=(b)=>b?Object.fromEntries(b.split(";").map((l)=>l.split("=").map((j)=>decodeURIComponent(j)))):{},T=(b)=>Object.entries(b).map((l)=>l.map((j)=>encodeURIComponent(j)).join("=")).join(";"),U=(b)=>JSON.parse(atob(b)),W=(b)=>btoa(JSON.stringify(b)),X=(b)=>({arg:l,...j})=>b(R(l),j),Y=(b)=>({arg:l,...j})=>b(U(l),j);export{Z as router,R as p2o,T as o2p,$ as installOnHash,X as hrRoute,W as encodeArg,U as decodeArg,Y as bRoute};
